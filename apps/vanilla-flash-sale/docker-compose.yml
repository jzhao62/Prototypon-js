version: "3.9"
services:
  postgres:
    image: postgres:12
    container_name: postgres-container
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: postgres
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M

  redis:
    image: redis:alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-wolfi:8.17.0
    container_name: elasticsearch-container
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.2
    container_name: logstash-container
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - logstash-data:/usr/share/logstash/data
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.2
    container_name: kibana-container
    ports:
      - "5601:5601"
    #    volumes:
    #      - kibana-data:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G

volumes:
  postgres-data:
  logstash-data:
#  kibana-data: