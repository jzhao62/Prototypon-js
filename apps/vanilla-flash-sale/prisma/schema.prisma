// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FlashSaleItem {
  id           Int       @id @default(autoincrement())
  itemName     String
  quantity     Int       @default(0)
  version      Int       @default(0)
  lastUpdated  DateTime  @default(now())
  purchaseLogs PurchaseLog[]
  userPurchases UserPurchase[]
}

model PurchaseLog {
  id           Int       @id @default(autoincrement())
  itemId       Int
  userId       Int
  quantity     Int
  purchaseTime DateTime  @default(now())
  flashSaleItem FlashSaleItem @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  email        String    @unique
  createdAt    DateTime  @default(now())
  purchaseLogs PurchaseLog[]
  userPurchases UserPurchase[]
}

model UserPurchase {
  id           Int       @id @default(autoincrement())
  userId       Int
  itemId       Int
  quantity     Int
  createdAt    DateTime  @default(now())
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  flashSaleItem FlashSaleItem @relation(fields: [itemId], references: [id], onDelete: Cascade)
  @@unique([userId, itemId])
}
